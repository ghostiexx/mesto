(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{hi:()=>x,lH:()=>z,eY:()=>R});var t={inputSelector:".popup__input",submitButtonSelector:".popup__save",inactiveButtonClass:"popup__save_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},n=document.querySelector(".cards"),r=document.querySelector(".profile__edit-button"),o=document.querySelector(".profile__add-button"),i=document.querySelector(".profile__avatar-btn"),a=document.querySelector("#card-template").content,c=document.querySelector(".popup__form_type_add"),u=document.querySelector(".popup__form_type_edit"),s=document.querySelector(".popup__form_type_update");function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=function(){function e(t){var n=t.nameSelector,r=t.descriptionSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._description=document.querySelector(r),this._avatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,description:this._description.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.description;this._name.textContent=t,this._description.textContent=n}},{key:"setUserAvatar",value:function(e){this._avatar.src=e}}])&&l(t.prototype,n),e}();function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var d=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selector=t,this._popup=document.querySelector(t)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"open",value:function(){var e=this;this._popup.classList.add("popup_opened"),document.addEventListener("keydown",(function(t){return e._handleEscClose(t)}))}},{key:"close",value:function(){var e=this;this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",(function(t){return e._handleEscClose(t)}))}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__close").addEventListener("click",(function(){e.close()})),this._popup.addEventListener("click",(function(t){t.target===t.currentTarget&&e.close()}))}}])&&p(t.prototype,n),e}();function _(e){return(_="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function y(e,t,n){return(y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=b(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function v(e,t){return(v=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function m(e,t){return!t||"object"!==_(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function b(e){return(b=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var k=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&v(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=b(r);if(o){var n=b(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return m(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popupCaption=t._popup.querySelector(".popup__caption"),t._popupImage=t._popup.querySelector(".popup__image"),t}return t=a,(n=[{key:"open",value:function(e,t){y(b(a.prototype),"open",this).call(this),this._popupCaption.textContent=t,this._popupImage.src=e,this._popupImage.alt=t}}])&&h(t.prototype,n),a}(d);function g(e){return(g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(e,t,n){return(C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function L(e,t){return(L=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function S(e,t){return!t||"object"!==g(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function w(e){return(w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&L(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submithandler=t,n._form=n._popup.querySelector(".popup__form"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._values={},this._inputs=this._form.querySelectorAll(".popup__input"),this._inputs.forEach((function(t){e._values[t.id]=t.value})),this._values}},{key:"close",value:function(){C(w(a.prototype),"close",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){var e=this;C(w(a.prototype),"setEventListeners",this).call(this),this._popup.querySelector(".popup__form").addEventListener("submit",(function(t){e._submithandler(t,e._getInputValues()),e.close()}))}}])&&E(t.prototype,n),a}(d);function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(t,n,r,o,i,a,c){var u=c.handleCardClick,s=c.deleteCardHandler,l=c.setLikeHandler,f=c.deleteLikeHandler;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._cardTemplate=t,this._title=n.title,this._imageURI=n.imageURI,this._ownerId=o,this._cardId=r,this._currentUserId=i,this._likesAmount=a,this._handleCardClick=u,this._deleteCardHandler=s,this._setLikeHandler=l,this._deleteLikeHandler=f}var t,n;return t=e,(n=[{key:"_getCardFromTemplate",value:function(){this._cardElement=this._cardTemplate.querySelector(".card").cloneNode(!0),this._deleteButton=this._cardElement.querySelector(".card__delete-btn"),this._likeButton=this._cardElement.querySelector(".card__button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__name"),this._cardLikes=this._cardElement.querySelector(".card__like-counter"),this._ownerId!==this._currentUserId&&(this._deleteButton.classList.add("card__delete-btn_disabled"),this._deleteButton.setAttribute("disabled",!0))}},{key:"_setCardInfo",value:function(){this._cardTitle.textContent=this._title,this._cardImage.src=this._imageURI,this._cardImage.alt="Изображение ".concat(this._title)}},{key:"_setLikesAmount",value:function(){this._cardLikes.textContent=this._likesAmount.length}},{key:"_isLikedByUser",value:function(){var e=this;this._likesAmount.forEach((function(t){t._id===e._currentUserId&&e._likeButton.classList.add("card__button_active")}))}},{key:"renderLikesAmount",value:function(e){return String(e)}},{key:"setLike",value:function(e){this._likeButton.classList.add("card__button_active"),this._cardLikes.textContent=this.renderLikesAmount(e)}},{key:"deleteLike",value:function(e){this._likeButton.classList.remove("card__button_active"),this._cardLikes.textContent=this.renderLikesAmount(e)}},{key:"_setEventListeners",value:function(){var e=this;this._deleteButton.addEventListener("click",(function(){e._cardElement.remove(),e._cardElement=null,e._deleteCardHandler()})),this._likeButton.addEventListener("click",(function(){e._likeButton.classList.contains("card__button_active")?(e._likeButton.classList.remove("card__button_active"),e._deleteLikeHandler()):(e._likeButton.classList.add("card__button_active"),e._setLikeHandler())})),this._cardImage.addEventListener("click",(function(){e._handleCardClick()}))}},{key:"getCardId",value:function(){return this._cardId}},{key:"generateCard",value:function(){return this._getCardFromTemplate(),this._setCardInfo(),this._setEventListeners(),this._setLikesAmount(),this._isLikedByUser(),this._cardElement}}])&&O(t.prototype,n),e}();function H(e,t,n,r,o,i){var c=new j(a,{imageURI:e,title:t},n,r,o,i,{handleCardClick:function(){return z.open(e,t)},deleteCardHandler:function(){return x.deleteCard(c.getCardId())},setLikeHandler:function(){x.setLike(c.getCardId()).then((function(e){c.setLike(e.likes.length)}))},deleteLikeHandler:function(){x.removeLike(c.getCardId()).then((function(e){c.deleteLike(e.likes.length)}))}});return c}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var P=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"_clearContainer",value:function(){this._container.innerHtml=""}},{key:"addItem",value:function(e){this._container.append(e)}},{key:"render",value:function(){var e=this;this._clearContainer(),"function"==typeof this._renderer&&this._items.forEach((function(t){e.addItem(e._renderer(t))}))}}])&&q(t.prototype,n),e}();function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._configurator=t,this._form=n}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e){this._errorElement=this._form.querySelector(".".concat(e.id,"-error")),e.classList.add(this._configurator.inputErrorClass),this._errorElement.textContent=e.validationMessage,this._errorElement.classList.add(this._configurator.errorClass)}},{key:"_hideInputError",value:function(e){this._errorElement=this._form.querySelector(".".concat(e.id,"-error")),e.classList.remove(this._configurator.inputErrorClass),this._errorElement.textContent="",this._errorElement.classList.remove(this._configurator.errorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButton",value:function(e,t){this._hasInvalidInput(e)?(t.classList.add(this._configurator.inactiveButtonClass),t.setAttribute("disabled",!0)):(t.classList.remove(this._configurator.inactiveButtonClass),t.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(e){var t=this;this._inputArray=Array.from(this._form.querySelectorAll(this._configurator.inputSelector)),this._button=this._form.querySelector(this._configurator.submitButtonSelector),this._inputArray.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButton(t._inputArray,t._button)}))}))}},{key:"enableValidation",value:function(){var e=this;this._formArray=Array.from(this._form),this._formArray.forEach((function(t){t.addEventListener("submit",(function(e){e.preventDefault()})),e._setEventListeners(t)}))}}])&&U(t.prototype,n),e}();function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._token=t.headers.authorization}var t,n;return t=e,(n=[{key:"_responseHandler",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"_errorHandler",value:function(e){console.log(e)}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{headers:{authorization:this._token}}).then((function(t){return e._responseHandler(t)})).catch((function(t){return e._errorHandler(t)}))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{headers:{authorization:this._token}}).then((function(t){return e._responseHandler(t)})).catch((function(t){return e._errorHandler(t)}))}},{key:"editProfile",value:function(e,t){var n=this;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e,about:t})}).then((function(e){return n._responseHandler(e)})).catch((function(e){return n._errorHandler(e)}))}},{key:"addCard",value:function(e,t){var n=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e,link:t})}).then((function(e){return n._responseHandler(e)})).catch((function(e){return n._errorHandler(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(e){return t._responseHandler(e)})).catch((function(e){return t._errorHandler(e)}))}},{key:"setLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(e){return t._responseHandler(e)})).catch((function(e){return t._errorHandler(e)}))}},{key:"removeLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(e){return t._responseHandler(e)})).catch((function(e){return t._errorHandler(e)}))}},{key:"updateAvatar",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((function(e){return t._responseHandler(e)})).catch((function(e){return t._errorHandler(e)}))}}])&&A(t.prototype,n),e}(),R=new f({nameSelector:".profile__name",descriptionSelector:".profile__description",avatarSelector:".profile__avatar-image "}),x=new B({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-27",headers:{authorization:"d1fb4f5d-7dcb-41a7-a4a6-36843c6f0f6c","Content-Type":"application/json"}}),z=new k(".popup_type_image"),D=new I(".popup_type_edit",(function(e,t){e.preventDefault();var n=t.name,r=t.description;x.editProfile(n,r),R.setUserInfo({name:n,description:r})})),V=new I(".popup_type_add",(function(e,t){e.preventDefault();var r=e.target.querySelector(".popup__save"),o=t.place,i=t.link,a=H(i,o);x.addCard(o,i),n.prepend(a.generateCard()),r.classList.add("popup__save_disabled"),r.setAttribute("disabled",!0)})),N=new I(".popup_type_update",(function(e,t){e.preventDefault();var n=t.link;x.updateAvatar(n),R.setUserAvatar(n)})),J=new T(t,c),F=new T(t,u),M=new T(t,s);x.getInitialCards().then((function(e){!function(e){new P({items:e,renderer:function(e){return H(e.link,e.name,e._id,e.owner._id,"763cce9e3a4b06f54fdb3f56",e.likes).generateCard()}},".cards").render()}(e)})),x.getUserInfo().then((function(e){R.setUserInfo({name:e.name,description:e.about}),R.setUserAvatar(e.avatar)})),z.setEventListeners(),D.setEventListeners(),V.setEventListeners(),N.setEventListeners(),J.enableValidation(),F.enableValidation(),M.enableValidation(),r.addEventListener("click",(function(){D.open(),function(e){var t=document.querySelector(".popup__input_type_name"),n=document.querySelector(".popup__input_type_description"),r=e.getUserInfo(),o=r.name,i=r.description;t.value=o,n.value=i}(R)})),o.addEventListener("click",(function(e){V.open(e)})),i.addEventListener("click",(function(){N.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,