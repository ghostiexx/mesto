(()=>{"use strict";var t={inputSelector:".popup__input",submitButtonSelector:".popup__save",inactiveButtonClass:"popup__save_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},e=document.querySelector(".popup__input_type_name"),n=document.querySelector(".popup__input_type_description"),r=(document.querySelector(".cards"),document.querySelector(".profile__edit-button")),o=document.querySelector(".profile__add-button"),i=document.querySelector(".profile__avatar-btn"),a=document.querySelector("#card-template").content,u=document.querySelector(".popup__form_type_add"),c=document.querySelector(".popup__form_type_edit"),s=document.querySelector(".popup__form_type_update");function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var f=function(){function t(e){var n=e.nameSelector,r=e.descriptionSelector,o=e.avatarSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=document.querySelector(n),this._description=document.querySelector(r),this._avatar=document.querySelector(o),this._id=null}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,description:this._description.textContent}}},{key:"setUserInfo",value:function(t){var e=t.name,n=t.description;this._name.textContent=e,this._description.textContent=n}},{key:"setUserAvatar",value:function(t){this._avatar.src=t}}])&&l(e.prototype,n),t}();function p(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var d=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._selector=e,this._popup=document.querySelector(this._selector),this._submitBtn=this._popup.querySelector(".popup__save"),this._handleEscClose=this._handleEscClose.bind(this)}var e,n;return e=t,(n=[{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("popup_opened")}},{key:"setButtonTextContent",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Сохранение...";this._submitBtn&&(this._submitBtn.textContent=t)}},{key:"setEventListeners",value:function(){var t=this;this._popup.querySelector(".popup__close").addEventListener("click",(function(){t.close()})),this._popup.addEventListener("click",(function(e){e.target===e.currentTarget&&t.close()}))}}])&&p(e.prototype,n),t}();function h(t){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function y(t,e,n){return(y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=b(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function v(t,e){return(v=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function m(t,e){return!e||"object"!==h(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function b(t){return(b=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var k=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&v(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=b(r);if(o){var n=b(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return m(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,t))._popupCaption=e._popup.querySelector(".popup__caption"),e._popupImage=e._popup.querySelector(".popup__image"),e}return e=a,(n=[{key:"open",value:function(t,e){y(b(a.prototype),"open",this).call(this),this._popupCaption.textContent=e,this._popupImage.src=t,this._popupImage.alt=e}}])&&_(e.prototype,n),a}(d);function g(t){return(g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function C(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function E(t,e,n){return(E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=L(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function w(t,e){return(w=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function S(t,e){return!e||"object"!==g(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function L(t){return(L=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var O=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&w(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=L(r);if(o){var n=L(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return S(this,t)});function a(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._submithandler=e,n._form=n._popup.querySelector(".popup__form"),n._inputs=n._form.querySelectorAll(".popup__input"),n}return e=a,(n=[{key:"_getInputValues",value:function(){var t=this;return this._values={},this._inputs.forEach((function(e){t._values[e.id]=e.value})),this._values}},{key:"close",value:function(){E(L(a.prototype),"close",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){var t=this;E(L(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){t._submithandler(e,t._getInputValues())}))}}])&&C(e.prototype,n),a}(d);function I(t){return(I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function j(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function T(t,e,n){return(T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=q(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function P(t,e){return(P=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function B(t,e){return!e||"object"!==I(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function q(t){return(q=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var A=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&P(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=q(r);if(o){var n=q(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return B(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,t))._form=e._popup.querySelector(".popup__form"),e}return e=a,(n=[{key:"setSubmitHandler",value:function(t){this._submitHandler=t}},{key:"setEventListeners",value:function(){var t=this;T(q(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),"function"==typeof t._submitHandler&&t._submitHandler()}))}}])&&j(e.prototype,n),a}(d);function U(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var R=function(){function t(e,n){var r=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=r,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"_clearContainer",value:function(){this._container.innerHtml=""}},{key:"addItem",value:function(t){this._container.prepend(t)}},{key:"render",value:function(t){var e=this;this._clearContainer(),t.forEach((function(t){e.addItem(e._renderer(t))}))}}])&&U(e.prototype,n),t}();function H(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var x=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._configurator=e,this._form=n}var e,n;return e=t,(n=[{key:"_showInputError",value:function(t){this._errorElement=this._form.querySelector(".".concat(t.id,"-error")),t.classList.add(this._configurator.inputErrorClass),this._errorElement.textContent=t.validationMessage,this._errorElement.classList.add(this._configurator.errorClass)}},{key:"_hideInputError",value:function(t){this._errorElement=this._form.querySelector(".".concat(t.id,"-error")),t.classList.remove(this._configurator.inputErrorClass),this._errorElement.textContent="",this._errorElement.classList.remove(this._configurator.errorClass)}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}},{key:"_hasInvalidInput",value:function(){return this._inputArray.some((function(t){return!t.validity.valid}))}},{key:"_toggleButton",value:function(){this._hasInvalidInput()?(this._button.classList.add(this._configurator.inactiveButtonClass),this._button.setAttribute("disabled",!0)):(this._button.classList.remove(this._configurator.inactiveButtonClass),this._button.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(){var t=this;this._inputArray=Array.from(this._form.querySelectorAll(this._configurator.inputSelector)),this._button=this._form.querySelector(this._configurator.submitButtonSelector),this._inputArray.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButton()}))}))}},{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(t){t.preventDefault()})),this._setEventListeners()}},{key:"resetValidation",value:function(){var t=this;this._toggleButton(),this._inputArray.forEach((function(e){t._hideInputError(e)}))}}])&&H(e.prototype,n),t}();function V(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var z=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e.baseUrl,this._token=e.headers.authorization}var e,n;return e=t,(n=[{key:"_responseHandler",value:function(t){return t.ok?Promise.resolve(t.json()):Promise.reject("Error: ".concat(t.status))}},{key:"getInitialCards",value:function(){var t=this;return fetch("".concat(this._baseUrl,"/cards"),{headers:{authorization:this._token}}).then((function(e){return t._responseHandler(e)}))}},{key:"getUserInfo",value:function(){var t=this;return fetch("".concat(this._baseUrl,"/users/me"),{headers:{authorization:this._token}}).then((function(e){return t._responseHandler(e)}))}},{key:"editProfile",value:function(t,e){var n=this;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:t,about:e})}).then((function(t){return n._responseHandler(t)}))}},{key:"addCard",value:function(t,e){var n=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:t,link:e})}).then((function(t){return n._responseHandler(t)}))}},{key:"deleteCard",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(t){return e._responseHandler(t)}))}},{key:"setLike",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(t),{method:"PUT",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(t){return e._responseHandler(t)}))}},{key:"removeLike",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(t),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(t){return e._responseHandler(t)}))}},{key:"updateAvatar",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:t})}).then((function(t){return e._responseHandler(t)}))}}])&&V(e.prototype,n),t}();function D(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var N,J=function(){function t(e,n,r,o,i,a,u){var c=u.handleCardClick,s=u.deleteCardHandler,l=u.setLikeHandler,f=u.deleteLikeHandler;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._cardTemplate=e,this._title=n.title,this._imageURI=n.imageURI,this._ownerId=o,this._cardId=r,this._currentUserId=i,this._likesAmount=a,this._handleCardClick=c,this._deleteCardHandler=s,this._setLikeHandler=l,this._deleteLikeHandler=f}var e,n;return e=t,(n=[{key:"_getCardFromTemplate",value:function(){this._cardElement=this._cardTemplate.querySelector(".card").cloneNode(!0),this._deleteButton=this._cardElement.querySelector(".card__delete-btn"),this._likeButton=this._cardElement.querySelector(".card__button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__name"),this._cardLikes=this._cardElement.querySelector(".card__like-counter"),this._ownerId!==this._currentUserId&&(this._deleteButton.classList.add("card__delete-btn_disabled"),this._deleteButton.setAttribute("disabled",!0))}},{key:"_setCardInfo",value:function(){this._cardTitle.textContent=this._title,this._cardImage.src=this._imageURI,this._cardImage.alt="Изображение ".concat(this._title)}},{key:"_setLikesAmount",value:function(){this._cardLikes.textContent=this._likesAmount.length}},{key:"_isLikedByUser",value:function(){var t=this;this._likesAmount.forEach((function(e){e._id===t._currentUserId&&t._likeButton.classList.add("card__button_active")}))}},{key:"renderLikesAmount",value:function(t){return String(t)}},{key:"setLike",value:function(t){this._likeButton.classList.add("card__button_active"),this._cardLikes.textContent=this.renderLikesAmount(t)}},{key:"deleteLike",value:function(t){this._likeButton.classList.remove("card__button_active"),this._cardLikes.textContent=this.renderLikesAmount(t)}},{key:"deleteCard",value:function(){this._cardElement.remove(),this._cardElement=null}},{key:"_setEventListeners",value:function(){var t=this;this._deleteButton.addEventListener("click",(function(){t._deleteCardHandler()})),this._likeButton.addEventListener("click",(function(){t._likeButton.classList.contains("card__button_active")?t._deleteLikeHandler():t._setLikeHandler()})),this._cardImage.addEventListener("click",(function(){t._handleCardClick()}))}},{key:"getCardId",value:function(){return this._cardId}},{key:"generateCard",value:function(){return this._getCardFromTemplate(),this._setCardInfo(),this._setEventListeners(),this._setLikesAmount(),this._isLikedByUser(),this._cardElement}}])&&D(e.prototype,n),t}();function F(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var M=new f({nameSelector:".profile__name",descriptionSelector:".profile__description",avatarSelector:".profile__avatar-image "}),$=new z({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-27",headers:{authorization:"d1fb4f5d-7dcb-41a7-a4a6-36843c6f0f6c","Content-Type":"application/json"}}),G=new R({renderer:function(t){return K(t.link,t.name,t._id,t.owner._id,N,t.likes).generateCard()}},".cards");function K(t,e,n,r,o,i){var u=new J(a,{imageURI:t,title:e},n,r,o,i,{handleCardClick:function(){return Q.open(t,e)},deleteCardHandler:function(){Z.open(),Z.setSubmitHandler((function(){Z.setButtonTextContent("Удаление..."),$.deleteCard(u.getCardId()).then((function(){u.deleteCard(),Z.close()})).catch((function(t){return alert("Ошибка: ".concat(t))})).finally((function(){Z.setButtonTextContent("Да")}))}))},setLikeHandler:function(){$.setLike(u.getCardId()).then((function(t){u.setLike(t.likes.length)})).catch((function(t){return alert("Ошибка: ".concat(t))}))},deleteLikeHandler:function(){$.removeLike(u.getCardId()).then((function(t){u.deleteLike(t.likes.length)})).catch((function(t){return alert("Ошибка: ".concat(t))}))}});return u}var Q=new k(".popup_type_image"),W=new O(".popup_type_edit",(function(t,e){t.preventDefault();var n=e.name,r=e.description;W.setButtonTextContent(),$.editProfile(n,r).then((function(){M.setUserInfo({name:n,description:r}),W.close()})).catch((function(t){return alert("Ошибка: ".concat(t))})).finally((function(){W.setButtonTextContent("Сохранить")}))})),X=new O(".popup_type_add",(function(t,e){t.preventDefault();var n=e.place,r=e.link;X.setButtonTextContent(),$.addCard(n,r).then((function(t){var e=K(r,n,t._id,t.owner._id,N,t.likes);G.addItem(e.generateCard()),X.close()})).catch((function(t){return alert("Ошибка: ".concat(t))})).finally((function(){X.setButtonTextContent("Сохранить")}))})),Y=new O(".popup_type_update",(function(t,e){t.preventDefault();var n=e.newAvatar;Y.setButtonTextContent(),$.updateAvatar(n).then((function(t){M.setUserAvatar(t.avatar),Y.close()})).catch((function(t){return alert("Ошибка: ".concat(t))})).finally((function(){Y.setButtonTextContent("Сохранить")}))})),Z=new A(".popup_type_confirm"),tt=new x(t,u),et=new x(t,c),nt=new x(t,s);Q.setEventListeners(),W.setEventListeners(),X.setEventListeners(),Y.setEventListeners(),Z.setEventListeners(),tt.enableValidation(),et.enableValidation(),nt.enableValidation(),r.addEventListener("click",(function(){W.open(),function(t){var r=t.getUserInfo(),o=r.name,i=r.description;e.value=o,n.value=i}(M),et.resetValidation()})),o.addEventListener("click",(function(t){X.open(t),tt.resetValidation()})),i.addEventListener("click",(function(){Y.open(),nt.resetValidation()})),Promise.all([$.getUserInfo(),$.getInitialCards()]).then((function(t){var e,n,r=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){u=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(e,n)||function(t,e){if(t){if("string"==typeof t)return F(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?F(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];M.setUserInfo({name:o.name,description:o.about}),M.setUserAvatar(o.avatar),N=o._id,G.render(i.reverse())})).catch((function(t){return alert("Ошибка: ".concat(t))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,