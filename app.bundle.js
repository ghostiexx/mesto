(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{hi:()=>M,Ct:()=>Q,ZI:()=>G,YN:()=>$,lH:()=>Z,$q:()=>K,eY:()=>Y});var t={inputSelector:".popup__input",submitButtonSelector:".popup__save",inactiveButtonClass:"popup__save_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},n="763cce9e3a4b06f54fdb3f56",r=document.querySelector(".cards"),o=document.querySelector(".profile__edit-button"),i=document.querySelector(".profile__add-button"),a=document.querySelector(".profile__avatar-btn"),c=document.querySelector("#card-template").content,u=document.querySelector(".popup__form_type_add"),s=document.querySelector(".popup__form_type_edit"),l=document.querySelector(".popup__form_type_update");function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var p=function(){function e(t){var n=t.nameSelector,r=t.descriptionSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._description=document.querySelector(r),this._avatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,description:this._description.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.description;this._name.textContent=t,this._description.textContent=n}},{key:"setUserAvatar",value:function(e){this._avatar.src=e}}])&&f(t.prototype,n),e}();function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var _=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selector=t,this._popup=document.querySelector(t),this._submitBtn=this._popup.querySelector(".popup__save")}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"open",value:function(){var e=this;this._popup.classList.add("popup_opened"),document.addEventListener("keydown",(function(t){return e._handleEscClose(t)}))}},{key:"close",value:function(){var e=this;this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",(function(t){return e._handleEscClose(t)}))}},{key:"setButtonTextContent",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Сохранение...";this._submitBtn.textContent=e}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__close").addEventListener("click",(function(){e.close()})),this._popup.addEventListener("click",(function(t){t.target===t.currentTarget&&e.close()}))}}])&&d(t.prototype,n),e}();function h(e){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t,n){return(v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function m(e,t){return(m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function b(e,t){return!t||"object"!==h(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function k(e){return(k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&m(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(r);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popupCaption=t._popup.querySelector(".popup__caption"),t._popupImage=t._popup.querySelector(".popup__image"),t}return t=a,(n=[{key:"open",value:function(e,t){v(k(a.prototype),"open",this).call(this),this._popupCaption.textContent=t,this._popupImage.src=e,this._popupImage.alt=t}}])&&y(t.prototype,n),a}(_);function C(e){return(C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(e,t,n){return(L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function w(e,t){return(w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function S(e,t){return!t||"object"!==C(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function O(e){return(O=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&w(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(r);if(o){var n=O(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submithandler=t,n._form=n._popup.querySelector(".popup__form"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._values={},this._inputs=this._form.querySelectorAll(".popup__input"),this._inputs.forEach((function(t){e._values[t.id]=t.value})),this._values}},{key:"close",value:function(){L(O(a.prototype),"close",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){var e=this;L(O(a.prototype),"setEventListeners",this).call(this),this._popup.querySelector(".popup__form").addEventListener("submit",(function(t){e._submithandler(t,e._getInputValues())}))}}])&&E(t.prototype,n),a}(_);function j(e){return(j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function H(e,t,n){return(H="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function P(e,t){return(P=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function B(e,t){return!t||"object"!==j(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function q(e){return(q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&P(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return B(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._form=t._popup.querySelector(".popup__form"),t}return t=a,(n=[{key:"setSubmitHandler",value:function(e){this._submitHandler=e}},{key:"setEventListeners",value:function(){var e=this;H(q(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),"function"==typeof e._submitHandler&&e._submitHandler()}))}}])&&T(t.prototype,n),a}(_);function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var A=function(){function e(t,n,r,o,i,a,c){var u=c.handleCardClick,s=c.deleteCardHandler,l=c.setLikeHandler,f=c.deleteLikeHandler;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._cardTemplate=t,this._title=n.title,this._imageURI=n.imageURI,this._ownerId=o,this._cardId=r,this._currentUserId=i,this._likesAmount=a,this._handleCardClick=u,this._deleteCardHandler=s,this._setLikeHandler=l,this._deleteLikeHandler=f}var t,n;return t=e,(n=[{key:"_getCardFromTemplate",value:function(){this._cardElement=this._cardTemplate.querySelector(".card").cloneNode(!0),this._deleteButton=this._cardElement.querySelector(".card__delete-btn"),this._likeButton=this._cardElement.querySelector(".card__button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__name"),this._cardLikes=this._cardElement.querySelector(".card__like-counter"),this._ownerId!==this._currentUserId&&(this._deleteButton.classList.add("card__delete-btn_disabled"),this._deleteButton.setAttribute("disabled",!0))}},{key:"_setCardInfo",value:function(){this._cardTitle.textContent=this._title,this._cardImage.src=this._imageURI,this._cardImage.alt="Изображение ".concat(this._title)}},{key:"_setLikesAmount",value:function(){this._cardLikes.textContent=this._likesAmount.length}},{key:"_isLikedByUser",value:function(){var e=this;this._likesAmount.forEach((function(t){t._id===e._currentUserId&&e._likeButton.classList.add("card__button_active")}))}},{key:"renderLikesAmount",value:function(e){return String(e)}},{key:"setLike",value:function(e){this._likeButton.classList.add("card__button_active"),this._cardLikes.textContent=this.renderLikesAmount(e)}},{key:"deleteLike",value:function(e){this._likeButton.classList.remove("card__button_active"),this._cardLikes.textContent=this.renderLikesAmount(e)}},{key:"deleteCard",value:function(){this._cardElement.remove(),this._cardElement=null}},{key:"_setEventListeners",value:function(){var e=this;this._deleteButton.addEventListener("click",(function(){e._deleteCardHandler()})),this._likeButton.addEventListener("click",(function(){e._likeButton.classList.contains("card__button_active")?e._deleteLikeHandler():e._setLikeHandler()})),this._cardImage.addEventListener("click",(function(){e._handleCardClick()}))}},{key:"getCardId",value:function(){return this._cardId}},{key:"generateCard",value:function(){return this._getCardFromTemplate(),this._setCardInfo(),this._setEventListeners(),this._setLikesAmount(),this._isLikedByUser(),this._cardElement}}])&&U(t.prototype,n),e}();function x(e,t,n,r,o,i){var a=new A(c,{imageURI:e,title:t},n,r,o,i,{handleCardClick:function(){return Z.open(e,t)},deleteCardHandler:function(){Q.open(),Q.setSubmitHandler((function(){Q.setButtonTextContent("Удаление..."),M.deleteCard(a.getCardId()).then((function(){a.deleteCard()})).catch((function(e){return alert("Ошибка: ".concat(e))})).finally((function(){Q.close(),Q.setButtonTextContent("Да")}))}))},setLikeHandler:function(){M.setLike(a.getCardId()).then((function(e){a.setLike(e.likes.length)})).catch((function(e){return alert("Ошибка: ".concat(e))}))},deleteLikeHandler:function(){M.removeLike(a.getCardId()).then((function(e){a.deleteLike(e.likes.length)})).catch((function(e){return alert("Ошибка: ".concat(e))}))}});return a}function z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var D=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"_clearContainer",value:function(){this._container.innerHtml=""}},{key:"addItem",value:function(e){this._container.append(e)}},{key:"render",value:function(){var e=this;this._clearContainer(),"function"==typeof this._renderer&&this._items.forEach((function(t){e.addItem(e._renderer(t))}))}}])&&z(t.prototype,n),e}();function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var N=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._configurator=t,this._form=n}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e){this._errorElement=this._form.querySelector(".".concat(e.id,"-error")),e.classList.add(this._configurator.inputErrorClass),this._errorElement.textContent=e.validationMessage,this._errorElement.classList.add(this._configurator.errorClass)}},{key:"_hideInputError",value:function(e){this._errorElement=this._form.querySelector(".".concat(e.id,"-error")),e.classList.remove(this._configurator.inputErrorClass),this._errorElement.textContent="",this._errorElement.classList.remove(this._configurator.errorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButton",value:function(e,t){this._hasInvalidInput(e)?(t.classList.add(this._configurator.inactiveButtonClass),t.setAttribute("disabled",!0)):(t.classList.remove(this._configurator.inactiveButtonClass),t.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(e){var t=this;this._inputArray=Array.from(this._form.querySelectorAll(this._configurator.inputSelector)),this._button=this._form.querySelector(this._configurator.submitButtonSelector),this._inputArray.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButton(t._inputArray,t._button)}))}))}},{key:"enableValidation",value:function(){var e=this;this._formArray=Array.from(this._form),this._formArray.forEach((function(t){t.addEventListener("submit",(function(e){e.preventDefault()})),e._setEventListeners(t)}))}}])&&V(t.prototype,n),e}();function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var F=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._token=t.headers.authorization}var t,n;return t=e,(n=[{key:"_responseHandler",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"_errorHandler",value:function(e){console.log(e)}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{headers:{authorization:this._token}}).then((function(t){return e._responseHandler(t)})).catch((function(t){return e._errorHandler(t)}))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{headers:{authorization:this._token}}).then((function(t){return e._responseHandler(t)})).catch((function(t){return e._errorHandler(t)}))}},{key:"editProfile",value:function(e,t){var n=this;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e,about:t})}).then((function(e){return n._responseHandler(e)})).catch((function(e){return n._errorHandler(e)}))}},{key:"addCard",value:function(e,t){var n=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e,link:t})}).then((function(e){return n._responseHandler(e)})).catch((function(e){return n._errorHandler(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(e){return t._responseHandler(e)})).catch((function(e){return t._errorHandler(e)}))}},{key:"setLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(e){return t._responseHandler(e)})).catch((function(e){return t._errorHandler(e)}))}},{key:"removeLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(e){return t._responseHandler(e)})).catch((function(e){return t._errorHandler(e)}))}},{key:"updateAvatar",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((function(e){return t._responseHandler(e)})).catch((function(e){return t._errorHandler(e)}))}}])&&J(t.prototype,n),e}(),Y=new p({nameSelector:".profile__name",descriptionSelector:".profile__description",avatarSelector:".profile__avatar-image "}),M=new F({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-27",headers:{authorization:"d1fb4f5d-7dcb-41a7-a4a6-36843c6f0f6c","Content-Type":"application/json"}}),Z=new g(".popup_type_image"),$=new I(".popup_type_edit",(function(e,t){e.preventDefault();var n=t.name,r=t.description;$.setButtonTextContent(),M.editProfile(n,r).then((function(){Y.setUserInfo({name:n,description:r})})).catch((function(e){return alert("Ошибка: ".concat(e))})).finally((function(){$.close(),$.setButtonTextContent("Сохранить")}))})),G=new I(".popup_type_add",(function(e,t){e.preventDefault();var o=e.target.querySelector(".popup__save"),i=t.place,a=t.link;G.setButtonTextContent(),M.addCard(i,a).then((function(e){var t=x(a,i,e._id,e.owner._id,n,e.likes);r.prepend(t.generateCard())})).catch((function(e){return alert("Ошибка: ".concat(e))})).finally((function(){G.close(),G.setButtonTextContent("Сохранить"),o.classList.add("popup__save_disabled"),o.setAttribute("disabled",!0)}))})),K=new I(".popup_type_update",(function(e,t){e.preventDefault();var n=t.newAvatar;K.setButtonTextContent(),M.updateAvatar(n).then((function(e){Y.setUserAvatar(e.avatar)})).catch((function(e){return alert("Ошибка: ".concat(e))})).finally((function(){K.close(),K.setButtonTextContent("Сохранить")}))})),Q=new R(".popup_type_confirm"),W=new N(t,u),X=new N(t,s),ee=new N(t,l);M.getInitialCards().then((function(e){!function(e){new D({items:e,renderer:function(e){return x(e.link,e.name,e._id,e.owner._id,n,e.likes).generateCard()}},".cards").render()}(e)})),M.getUserInfo().then((function(e){Y.setUserInfo({name:e.name,description:e.about}),Y.setUserAvatar(e.avatar)})),Z.setEventListeners(),$.setEventListeners(),G.setEventListeners(),K.setEventListeners(),Q.setEventListeners(),W.enableValidation(),X.enableValidation(),ee.enableValidation(),o.addEventListener("click",(function(){$.open(),function(e){var t=document.querySelector(".popup__input_type_name"),n=document.querySelector(".popup__input_type_description"),r=e.getUserInfo(),o=r.name,i=r.description;t.value=o,n.value=i}(Y)})),i.addEventListener("click",(function(e){G.open(e)})),a.addEventListener("click",(function(){K.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,