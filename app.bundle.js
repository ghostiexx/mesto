(()=>{"use strict";var e={inputSelector:".popup__input",submitButtonSelector:".popup__save",inactiveButtonClass:"popup__save_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},t=document.querySelector(".popup__input_type_name"),n=document.querySelector(".popup__input_type_description"),r=(document.querySelector(".cards"),document.querySelector(".profile__edit-button")),o=document.querySelector(".profile__add-button"),i=document.querySelector(".profile__avatar-btn"),a=document.querySelector("#card-template").content,u=document.querySelector(".popup__form_type_add"),c=document.querySelector(".popup__form_type_edit"),s=document.querySelector(".popup__form_type_update");function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=function(){function e(t){var n=t.nameSelector,r=t.descriptionSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._description=document.querySelector(r),this._avatar=document.querySelector(o),this._id=null}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,description:this._description.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.description;this._name.textContent=t,this._description.textContent=n}},{key:"setUserAvatar",value:function(e){this._avatar.src=e}}])&&l(t.prototype,n),e}();function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var d=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selector=t,this._popup=document.querySelector(this._selector),this._submitBtn=this._popup.querySelector(".popup__save"),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("popup_opened")}},{key:"setButtonTextContent",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Сохранение...";this._submitBtn&&(this._submitBtn.textContent=e)}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__close").addEventListener("click",(function(){e.close()})),this._popup.addEventListener("click",(function(t){t.target===t.currentTarget&&e.close()}))}}])&&p(t.prototype,n),e}();function h(e){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function y(e,t,n){return(y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=b(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function v(e,t){return(v=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function m(e,t){return!t||"object"!==h(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function b(e){return(b=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var k=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&v(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=b(r);if(o){var n=b(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return m(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popupCaption=t._popup.querySelector(".popup__caption"),t._popupImage=t._popup.querySelector(".popup__image"),t}return t=a,(n=[{key:"open",value:function(e,t){y(b(a.prototype),"open",this).call(this),this._popupCaption.textContent=t,this._popupImage.src=e,this._popupImage.alt=t}}])&&_(t.prototype,n),a}(d);function g(e){return(g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(e,t,n){return(E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function S(e,t){return(S=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function w(e,t){return!t||"object"!==g(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function L(e){return(L=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&S(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=L(r);if(o){var n=L(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submithandler=t,n._form=n._popup.querySelector(".popup__form"),n._inputs=n._form.querySelectorAll(".popup__input"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._values={},this._inputs.forEach((function(t){e._values[t.id]=t.value})),this._values}},{key:"close",value:function(){E(L(a.prototype),"close",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){var e=this;E(L(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){e._submithandler(t,e._getInputValues())}))}}])&&C(t.prototype,n),a}(d);function I(e){return(I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function T(e,t,n){return(T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function B(e,t){return(B=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function P(e,t){return!t||"object"!==I(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function q(e){return(q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&B(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._form=t._popup.querySelector(".popup__form"),t}return t=a,(n=[{key:"setSubmitHandler",value:function(e){this._submitHandler=e}},{key:"setEventListeners",value:function(){var e=this;T(q(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),"function"==typeof e._submitHandler&&e._submitHandler()}))}}])&&j(t.prototype,n),a}(d);function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"_clearContainer",value:function(){this._container.innerHtml=""}},{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"render",value:function(e){var t=this;this._clearContainer(),e.forEach((function(e){t.addItem(t._renderer(e))}))}}])&&A(t.prototype,n),e}();function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var x=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._configurator=t,this._form=n}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e){this._errorElement=this._form.querySelector(".".concat(e.id,"-error")),e.classList.add(this._configurator.inputErrorClass),this._errorElement.textContent=e.validationMessage,this._errorElement.classList.add(this._configurator.errorClass)}},{key:"_hideInputError",value:function(e){this._errorElement=this._form.querySelector(".".concat(e.id,"-error")),e.classList.remove(this._configurator.inputErrorClass),this._errorElement.textContent="",this._errorElement.classList.remove(this._configurator.errorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButton",value:function(e,t){this._hasInvalidInput(e)?(t.classList.add(this._configurator.inactiveButtonClass),t.setAttribute("disabled",!0)):(t.classList.remove(this._configurator.inactiveButtonClass),t.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(){var e=this,t=Array.from(this._form.querySelectorAll(this._configurator.inputSelector)),n=this._form.querySelector(this._configurator.submitButtonSelector);t.forEach((function(r){r.addEventListener("input",(function(){e._checkInputValidity(r),e._toggleButton(t,n)}))}))}},{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this,t=Array.from(this._form.querySelectorAll(this._configurator.inputSelector)),n=this._form.querySelector(this._configurator.submitButtonSelector);this._toggleButton(t,n),t.forEach((function(t){e._hideInputError(t)}))}}])&&H(t.prototype,n),e}();function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var z=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._token=t.headers.authorization}var t,n;return t=e,(n=[{key:"_responseHandler",value:function(e){return e.ok?Promise.resolve(e.json()):Promise.reject("Error: ".concat(e.status))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{headers:{authorization:this._token}}).then((function(t){return e._responseHandler(t)}))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{headers:{authorization:this._token}}).then((function(t){return e._responseHandler(t)}))}},{key:"editProfile",value:function(e,t){var n=this;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e,about:t})}).then((function(e){return n._responseHandler(e)}))}},{key:"addCard",value:function(e,t){var n=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e,link:t})}).then((function(e){return n._responseHandler(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(e){return t._responseHandler(e)}))}},{key:"setLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(e){return t._responseHandler(e)}))}},{key:"removeLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(e){return t._responseHandler(e)}))}},{key:"updateAvatar",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((function(e){return t._responseHandler(e)}))}}])&&V(t.prototype,n),e}();function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var N,J=function(){function e(t,n,r,o,i,a,u){var c=u.handleCardClick,s=u.deleteCardHandler,l=u.setLikeHandler,f=u.deleteLikeHandler;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._cardTemplate=t,this._title=n.title,this._imageURI=n.imageURI,this._ownerId=o,this._cardId=r,this._currentUserId=i,this._likesAmount=a,this._handleCardClick=c,this._deleteCardHandler=s,this._setLikeHandler=l,this._deleteLikeHandler=f}var t,n;return t=e,(n=[{key:"_getCardFromTemplate",value:function(){this._cardElement=this._cardTemplate.querySelector(".card").cloneNode(!0),this._deleteButton=this._cardElement.querySelector(".card__delete-btn"),this._likeButton=this._cardElement.querySelector(".card__button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__name"),this._cardLikes=this._cardElement.querySelector(".card__like-counter"),this._ownerId!==this._currentUserId&&(this._deleteButton.classList.add("card__delete-btn_disabled"),this._deleteButton.setAttribute("disabled",!0))}},{key:"_setCardInfo",value:function(){this._cardTitle.textContent=this._title,this._cardImage.src=this._imageURI,this._cardImage.alt="Изображение ".concat(this._title)}},{key:"_setLikesAmount",value:function(){this._cardLikes.textContent=this._likesAmount.length}},{key:"_isLikedByUser",value:function(){var e=this;this._likesAmount.forEach((function(t){t._id===e._currentUserId&&e._likeButton.classList.add("card__button_active")}))}},{key:"renderLikesAmount",value:function(e){return String(e)}},{key:"setLike",value:function(e){this._likeButton.classList.add("card__button_active"),this._cardLikes.textContent=this.renderLikesAmount(e)}},{key:"deleteLike",value:function(e){this._likeButton.classList.remove("card__button_active"),this._cardLikes.textContent=this.renderLikesAmount(e)}},{key:"deleteCard",value:function(){this._cardElement.remove(),this._cardElement=null}},{key:"_setEventListeners",value:function(){var e=this;this._deleteButton.addEventListener("click",(function(){e._deleteCardHandler()})),this._likeButton.addEventListener("click",(function(){e._likeButton.classList.contains("card__button_active")?e._deleteLikeHandler():e._setLikeHandler()})),this._cardImage.addEventListener("click",(function(){e._handleCardClick()}))}},{key:"getCardId",value:function(){return this._cardId}},{key:"generateCard",value:function(){return this._getCardFromTemplate(),this._setCardInfo(),this._setEventListeners(),this._setLikesAmount(),this._isLikedByUser(),this._cardElement}}])&&D(t.prototype,n),e}();function F(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var M=new f({nameSelector:".profile__name",descriptionSelector:".profile__description",avatarSelector:".profile__avatar-image "}),$=new z({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-27",headers:{authorization:"d1fb4f5d-7dcb-41a7-a4a6-36843c6f0f6c","Content-Type":"application/json"}}),G=new R({renderer:function(e){return K(e.link,e.name,e._id,e.owner._id,N,e.likes).generateCard()}},".cards");function K(e,t,n,r,o,i){var u=new J(a,{imageURI:e,title:t},n,r,o,i,{handleCardClick:function(){return Q.open(e,t)},deleteCardHandler:function(){Z.open(),Z.setSubmitHandler((function(){Z.setButtonTextContent("Удаление..."),$.deleteCard(u.getCardId()).then((function(){u.deleteCard(),Z.close()})).catch((function(e){return alert("Ошибка: ".concat(e))})).finally((function(){Z.setButtonTextContent("Да")}))}))},setLikeHandler:function(){$.setLike(u.getCardId()).then((function(e){u.setLike(e.likes.length)})).catch((function(e){return alert("Ошибка: ".concat(e))}))},deleteLikeHandler:function(){$.removeLike(u.getCardId()).then((function(e){u.deleteLike(e.likes.length)})).catch((function(e){return alert("Ошибка: ".concat(e))}))}});return u}var Q=new k(".popup_type_image"),W=new O(".popup_type_edit",(function(e,t){e.preventDefault();var n=t.name,r=t.description;W.setButtonTextContent(),$.editProfile(n,r).then((function(){M.setUserInfo({name:n,description:r}),W.close()})).catch((function(e){return alert("Ошибка: ".concat(e))})).finally((function(){W.setButtonTextContent("Сохранить")}))})),X=new O(".popup_type_add",(function(e,t){e.preventDefault();var n=e.target.querySelector(".popup__save"),r=t.place,o=t.link;X.setButtonTextContent(),$.addCard(r,o).then((function(e){var t=K(o,r,e._id,e.owner._id,N,e.likes);G.addItem(t.generateCard()),X.close()})).catch((function(e){return alert("Ошибка: ".concat(e))})).finally((function(){X.setButtonTextContent("Сохранить"),n.classList.add("popup__save_disabled"),n.setAttribute("disabled",!0)}))})),Y=new O(".popup_type_update",(function(e,t){e.preventDefault();var n=t.newAvatar;Y.setButtonTextContent(),$.updateAvatar(n).then((function(e){M.setUserAvatar(e.avatar),Y.close()})).catch((function(e){return alert("Ошибка: ".concat(e))})).finally((function(){Y.setButtonTextContent("Сохранить")}))})),Z=new U(".popup_type_confirm"),ee=new x(e,u),te=new x(e,c),ne=new x(e,s);Q.setEventListeners(),W.setEventListeners(),X.setEventListeners(),Y.setEventListeners(),Z.setEventListeners(),ee.enableValidation(),te.enableValidation(),ne.enableValidation(),r.addEventListener("click",(function(){W.open(),function(e){var r=e.getUserInfo(),o=r.name,i=r.description;t.value=o,n.value=i}(M),te.resetValidation()})),o.addEventListener("click",(function(e){X.open(e),ee.resetValidation()})),i.addEventListener("click",(function(){Y.open(),ne.resetValidation()})),Promise.all([$.getUserInfo(),$.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return F(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?F(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];M.setUserInfo({name:o.name,description:o.about}),M.setUserAvatar(o.avatar),N=o._id,G.render(i.reverse())})).catch((function(e){return alert("Ошибка: ".concat(e))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFvQmdCLEdBQzFENkwsR0FBc0IsSUFBSTFILEVBQWNuRixFQUFvQmlCLEdBRWxFK0osRUFBZThCLG9CQUNmZixFQUFrQmUsb0JBQ2xCWCxFQUFpQlcsb0JBQ2pCUCxFQUFrQk8sb0JBQ2xCNUIsRUFBbUI0QixvQkFFbkJILEdBQWlCSSxtQkFDakJILEdBQWtCRyxtQkFDbEJGLEdBQW9CRSxtQkFFcEJyTSxFQUFRa0MsaUJBQWlCLFNBQVMsV0FDOUJtSixFQUFrQmQsT0F2SXRCLFNBQXdCVixHQUNwQixNQUE4QkEsRUFBU3lDLGNBQS9CckwsRUFBUixFQUFRQSxLQUFNRSxFQUFkLEVBQWNBLFlBRWR2QixFQUFVNEQsTUFBUXZDLEVBQ2xCbEIsRUFBaUJ5RCxNQUFRckMsRUFvSXpCb0wsQ0FBZTFDLEdBQ2ZxQyxHQUFrQk0scUJBR3RCdk0sRUFBT2lDLGlCQUFpQixTQUFTLFNBQUN1SyxHQUM5QmhCLEVBQWlCbEIsS0FBS2tDLEdBQ3RCUixHQUFpQk8scUJBR3JCdE0sRUFBY2dDLGlCQUFpQixTQUFTLFdBQ3BDMkosRUFBa0J0QixPQUNsQjRCLEdBQW9CSyxxQkFHeEJqRyxRQUFRbUcsSUFBSSxDQUFDNUMsRUFBSXdDLGNBQWV4QyxFQUFJNkMsb0JBQy9COUYsTUFBSyxZQUF1QixJLElBQUEsRyxFQUFBLEUsNENBQUEsSSxneEJBQXJCK0YsRUFBcUIsS0FBWEMsRUFBVyxLQUN6QmhELEVBQVMyQixZQUFZLENBQ2pCdkssS0FBTTJMLEVBQVMzTCxLQUNmRSxZQUFheUwsRUFBUzdGLFFBRTFCOEMsRUFBU21DLGNBQWNZLEVBQVN4TCxRQUNoQ2lHLEVBQVN1RixFQUFTNUwsSUFFbEIrSSxFQUFZK0MsT0FBT0QsRUFBTUUsY0FHNUJsQyxPQUFNLFNBQUFDLEdBQUssT0FBSUMsTUFBTSxXQUFELE9BQVlELFEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBDb25maXJtLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy/QoWFyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdmFsaWRhdG9yU2VsZWN0b3JzID0ge1xuICAgIGlucHV0U2VsZWN0b3I6ICcucG9wdXBfX2lucHV0JyxcbiAgICBzdWJtaXRCdXR0b25TZWxlY3RvcjogJy5wb3B1cF9fc2F2ZScsXG4gICAgaW5hY3RpdmVCdXR0b25DbGFzczogJ3BvcHVwX19zYXZlX2Rpc2FibGVkJyxcbiAgICBpbnB1dEVycm9yQ2xhc3M6ICdwb3B1cF9faW5wdXRfdHlwZV9lcnJvcicsXG4gICAgZXJyb3JDbGFzczogJ3BvcHVwX19lcnJvcl92aXNpYmxlJ1xufTtcblxuZXhwb3J0IGNvbnN0IHVzZXJJZCA9ICc3NjNjY2U5ZTNhNGIwNmY1NGZkYjNmNTYnO1xuXG5cbmV4cG9ydCBjb25zdCBuYW1lRmlsZWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X3R5cGVfbmFtZScpO1xuZXhwb3J0IGNvbnN0IGRlc2NyaXB0aW9uRmlsZWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X3R5cGVfZGVzY3JpcHRpb24nKTtcbmV4cG9ydCBjb25zdCBjYXJkc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkcycpO1xuZXhwb3J0IGNvbnN0IGJ0bkVkaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fZWRpdC1idXR0b24nKTtcbmV4cG9ydCBjb25zdCBidG5BZGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWRkLWJ1dHRvbicpO1xuZXhwb3J0IGNvbnN0IGJ0bkVkaXRBdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYXZhdGFyLWJ0bicpO1xuZXhwb3J0IGNvbnN0IGNhcmRUZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjYXJkLXRlbXBsYXRlJykuY29udGVudDtcbmV4cG9ydCBjb25zdCBhZGRGb3JtU2VsZWN0b3IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm1fdHlwZV9hZGQnKTtcbmV4cG9ydCBjb25zdCBlZGl0Rm9ybVNlbGVjdG9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtX3R5cGVfZWRpdCcpO1xuZXhwb3J0IGNvbnN0IHVwZGF0ZUZvcm1TZWxlY3RvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybV90eXBlX3VwZGF0ZScpOyIsImV4cG9ydCBjbGFzcyBVc2VySW5mbyB7XG4gIGNvbnN0cnVjdG9yKHsgbmFtZVNlbGVjdG9yLCBkZXNjcmlwdGlvblNlbGVjdG9yLCBhdmF0YXJTZWxlY3RvciB9KSB7XG4gICAgdGhpcy5fbmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobmFtZVNlbGVjdG9yKTtcbiAgICB0aGlzLl9kZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZGVzY3JpcHRpb25TZWxlY3Rvcik7XG4gICAgdGhpcy5fYXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhdmF0YXJTZWxlY3Rvcik7XG4gICAgdGhpcy5faWQgPSBudWxsO1xuICB9XG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6IHRoaXMuX25hbWUudGV4dENvbnRlbnQsXG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy5fZGVzY3JpcHRpb24udGV4dENvbnRlbnRcbiAgICB9XG4gIH1cblxuICBzZXRVc2VySW5mbyh7IG5hbWUsIGRlc2NyaXB0aW9uIH0pIHtcbiAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gbmFtZTtcbiAgICB0aGlzLl9kZXNjcmlwdGlvbi50ZXh0Q29udGVudCA9IGRlc2NyaXB0aW9uO1xuICB9XG5cbiAgc2V0VXNlckF2YXRhcihhdmF0YXIpIHtcbiAgICB0aGlzLl9hdmF0YXIuc3JjID0gYXZhdGFyO1xuICB9XG59IiwiZXhwb3J0IGNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3Ioc2VsZWN0b3IpIHtcbiAgICB0aGlzLl9zZWxlY3RvciA9IHNlbGVjdG9yO1xuICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9zZWxlY3Rvcik7XG4gICAgdGhpcy5fc3VibWl0QnRuID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19zYXZlJyk7XG5cbiAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XG4gIH1cblxuICBfaGFuZGxlRXNjQ2xvc2UoZXZlbnQpIHtcbiAgICBpZiAoZXZlbnQua2V5ID09PSAnRXNjYXBlJykge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgfVxuXG4gIG9wZW4oKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZCgncG9wdXBfb3BlbmVkJyk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfb3BlbmVkJyk7XG4gIH1cblxuICBzZXRCdXR0b25UZXh0Q29udGVudCh0ZXh0ID0gXCLQodC+0YXRgNCw0L3QtdC90LjQtS4uLlwiKSB7XG4gICAgaWYgKHRoaXMuX3N1Ym1pdEJ0bikgdGhpcy5fc3VibWl0QnRuLnRleHRDb250ZW50ID0gdGV4dDtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fY2xvc2UnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KTtcblxuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XG4gICAgICBpZiAoZXZlbnQudGFyZ2V0ID09PSBldmVudC5jdXJyZW50VGFyZ2V0KSB7XG4gICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuICB9KVxuICB9XG59IiwiaW1wb3J0IHsgUG9wdXAgfSBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHNlbGVjdG9yKSB7XG4gICAgc3VwZXIoc2VsZWN0b3IpO1xuXG4gICAgdGhpcy5fcG9wdXBDYXB0aW9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19jYXB0aW9uJyk7XG4gICAgdGhpcy5fcG9wdXBJbWFnZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW1hZ2UnKTtcbiAgfVxuXG4gIG9wZW4obGluaywgdGl0bGUpIHtcbiAgICBzdXBlci5vcGVuKCk7XG5cbiAgICB0aGlzLl9wb3B1cENhcHRpb24udGV4dENvbnRlbnQgPSB0aXRsZTtcbiAgICB0aGlzLl9wb3B1cEltYWdlLnNyYyA9IGxpbms7XG4gICAgdGhpcy5fcG9wdXBJbWFnZS5hbHQgPSB0aXRsZTtcbiAgfVxufSIsImltcG9ydCB7IFBvcHVwIH0gZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHNlbGVjdG9yLCBzdWJtaXRoYW5kbGVyKSB7XG4gICAgc3VwZXIoc2VsZWN0b3IpO1xuXG4gICAgdGhpcy5fc3VibWl0aGFuZGxlciA9IHN1Ym1pdGhhbmRsZXI7XG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybScpO1xuICAgIHRoaXMuX2lucHV0cyA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCgnLnBvcHVwX19pbnB1dCcpO1xuICB9XG5cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIHRoaXMuX3ZhbHVlcyA9IHt9O1xuXG4gICAgdGhpcy5faW5wdXRzLmZvckVhY2goaW5wdXQgPT4ge1xuICAgICAgdGhpcy5fdmFsdWVzW2lucHV0LmlkXSA9IGlucHV0LnZhbHVlO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHRoaXMuX3ZhbHVlcztcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHN1cGVyLmNsb3NlKCk7XG5cbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuXG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZXZlbnQpID0+IHtcbiAgICAgIHRoaXMuX3N1Ym1pdGhhbmRsZXIoZXZlbnQsIHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xuICAgIH0pO1xuICB9XG59IiwiaW1wb3J0IHsgUG9wdXAgfSBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgY2xhc3MgUG9wdXBDb25maXJtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3RvcihzZWxlY3Rvcikge1xuICAgIHN1cGVyKHNlbGVjdG9yKTtcblxuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTtcbiAgfVxuXG4gIHNldFN1Ym1pdEhhbmRsZXIoc3VibWl0SGFuZGxlcikge1xuICAgIHRoaXMuX3N1Ym1pdEhhbmRsZXIgPSBzdWJtaXRIYW5kbGVyO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2ZW50KSA9PiB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICBpZiAodHlwZW9mIHRoaXMuX3N1Ym1pdEhhbmRsZXIgPT09ICdmdW5jdGlvbicpIHRoaXMuX3N1Ym1pdEhhbmRsZXIoKTtcbiAgICB9KTtcbiAgfVxufSIsImV4cG9ydCBjbGFzcyBTZWN0aW9uIHtcbiAgY29uc3RydWN0b3Ioe3JlbmRlcmVyfSwgc2VsZWN0b3IpIHtcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuXG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4gIH1cblxuICBfY2xlYXJDb250YWluZXIoKSB7XG4gICAgdGhpcy5fY29udGFpbmVyLmlubmVySHRtbCA9ICcnO1xuICB9XG5cbiAgYWRkSXRlbShpdGVtKSB7XG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoaXRlbSk7XG4gIH1cblxuICByZW5kZXIoYXJyYXkpIHtcbiAgICB0aGlzLl9jbGVhckNvbnRhaW5lcigpO1xuICAgIFxuICAgIGFycmF5LmZvckVhY2goaXRlbSA9PiB7XG4gICAgICB0aGlzLmFkZEl0ZW0odGhpcy5fcmVuZGVyZXIoaXRlbSkpO1xuICAgIH0pO1xuICB9XG59IiwiZXhwb3J0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKG9iaiwgZm9ybSkge1xuICAgICAgICB0aGlzLl9jb25maWd1cmF0b3IgPSBvYmo7XG4gICAgICAgIHRoaXMuX2Zvcm0gPSBmb3JtO1xuICAgIH1cblxuICAgIF9zaG93SW5wdXRFcnJvcihpbnB1dCkge1xuICAgICAgICB0aGlzLl9lcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0LmlkfS1lcnJvcmApO1xuXG4gICAgICAgIGlucHV0LmNsYXNzTGlzdC5hZGQodGhpcy5fY29uZmlndXJhdG9yLmlucHV0RXJyb3JDbGFzcyk7XG4gICAgXG4gICAgICAgIHRoaXMuX2Vycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGlucHV0LnZhbGlkYXRpb25NZXNzYWdlO1xuICAgICAgICB0aGlzLl9lcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9jb25maWd1cmF0b3IuZXJyb3JDbGFzcyk7XG4gICAgfVxuXG4gICAgX2hpZGVJbnB1dEVycm9yKGlucHV0KSB7XG4gICAgICAgIHRoaXMuX2Vycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgLiR7aW5wdXQuaWR9LWVycm9yYCk7XG4gICAgXG4gICAgICAgIGlucHV0LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY29uZmlndXJhdG9yLmlucHV0RXJyb3JDbGFzcyk7XG4gICAgXG4gICAgICAgIHRoaXMuX2Vycm9yRWxlbWVudC50ZXh0Q29udGVudCA9ICcnO1xuICAgICAgICB0aGlzLl9lcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jb25maWd1cmF0b3IuZXJyb3JDbGFzcyk7XG4gICAgfVxuXG4gICAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dCkge1xuICAgICAgICBpZiAoIWlucHV0LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICAgICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfaGFzSW52YWxpZElucHV0KGlucHV0QXJyYXkpIHtcbiAgICAgICAgcmV0dXJuIGlucHV0QXJyYXkuc29tZSgoaW5wdXQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiAhaW5wdXQudmFsaWRpdHkudmFsaWQ7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIF90b2dnbGVCdXR0b24oaW5wdXRBcnJheSwgYnV0dG9uKSB7XG4gICAgICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoaW5wdXRBcnJheSkpIHtcbiAgICAgICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2NvbmZpZ3VyYXRvci5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgICAgICAgIGJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgdHJ1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBidXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jb25maWd1cmF0b3IuaW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgICAgICAgICBidXR0b24ucmVtb3ZlQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgICAgICBjb25zdCBpbnB1dEFycmF5ID0gQXJyYXkuZnJvbSh0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5fY29uZmlndXJhdG9yLmlucHV0U2VsZWN0b3IpKTtcbiAgICAgICAgY29uc3QgYnV0dG9uID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKHRoaXMuX2NvbmZpZ3VyYXRvci5zdWJtaXRCdXR0b25TZWxlY3Rvcik7XG5cbiAgICAgICAgaW5wdXRBcnJheS5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0KTtcbiAgICAgICAgICAgICAgICB0aGlzLl90b2dnbGVCdXR0b24oaW5wdXRBcnJheSwgYnV0dG9uKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBlbmFibGVWYWxpZGF0aW9uKCkge1xuICAgICAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldmVudCkgPT4ge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgfVxuXG4gICAgcmVzZXRWYWxpZGF0aW9uKCkge1xuICAgICAgICBjb25zdCBpbnB1dEFycmF5ID0gQXJyYXkuZnJvbSh0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5fY29uZmlndXJhdG9yLmlucHV0U2VsZWN0b3IpKTtcbiAgICAgICAgY29uc3QgYnV0dG9uID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKHRoaXMuX2NvbmZpZ3VyYXRvci5zdWJtaXRCdXR0b25TZWxlY3Rvcik7XG5cbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uKGlucHV0QXJyYXksIGJ1dHRvbik7XG4gICAgICAgIGlucHV0QXJyYXkuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0KTtcbiAgICAgICAgfSlcbiAgICB9XG59IiwiZXhwb3J0IGNsYXNzIEFwaSB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICB0aGlzLl9iYXNlVXJsID0gb3B0aW9ucy5iYXNlVXJsO1xuICAgIHRoaXMuX3Rva2VuID0gb3B0aW9ucy5oZWFkZXJzLmF1dGhvcml6YXRpb247XG4gIH1cblxuICBfcmVzcG9uc2VIYW5kbGVyKHJlc3BvbnNlKSB7XG4gICAgaWYgKHJlc3BvbnNlLm9rKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc3BvbnNlLmpzb24oKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXNwb25zZS5zdGF0dXN9YCk7XG4gIH1cblxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl90b2tlblxuICAgICAgfVxuICAgIH0pXG4gICAgLnRoZW4ocmVzcG9uc2UgPT4gdGhpcy5fcmVzcG9uc2VIYW5kbGVyKHJlc3BvbnNlKSlcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fdG9rZW5cbiAgICAgIH1cbiAgICB9KVxuICAgIC50aGVuKHJlc3BvbnNlID0+IHRoaXMuX3Jlc3BvbnNlSGFuZGxlcihyZXNwb25zZSkpXG4gIH1cblxuICBlZGl0UHJvZmlsZShuYW1lLCBhYm91dCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fdG9rZW4sXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgIGFib3V0OiBhYm91dFxuICAgICAgfSlcbiAgICB9KVxuICAgIC50aGVuKHJlc3BvbnNlID0+IHRoaXMuX3Jlc3BvbnNlSGFuZGxlcihyZXNwb25zZSkpXG4gIH1cblxuICBhZGRDYXJkKG5hbWUsIGxpbmspIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fdG9rZW4sXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgIGxpbms6IGxpbmtcbiAgICAgIH0pXG4gICAgfSlcbiAgICAudGhlbihyZXNwb25zZSA9PiB0aGlzLl9yZXNwb25zZUhhbmRsZXIocmVzcG9uc2UpKVxuICB9XG5cbiAgZGVsZXRlQ2FyZChjYXJkSWQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9YCwge1xuICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fdG9rZW4sXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgIH1cbiAgICB9KVxuICAgIC50aGVuKHJlc3BvbnNlID0+IHRoaXMuX3Jlc3BvbnNlSGFuZGxlcihyZXNwb25zZSkpXG4gIH1cblxuICBzZXRMaWtlKGlkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzL2xpa2VzLyR7aWR9YCwge1xuICAgICAgbWV0aG9kOiAnUFVUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fdG9rZW4sXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgIH1cbiAgICB9KVxuICAgIC50aGVuKHJlc3BvbnNlID0+IHRoaXMuX3Jlc3BvbnNlSGFuZGxlcihyZXNwb25zZSkpXG4gIH1cblxuICByZW1vdmVMaWtlKGlkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzL2xpa2VzLyR7aWR9YCwge1xuICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fdG9rZW4sXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgIH1cbiAgICB9KVxuICAgIC50aGVuKHJlc3BvbnNlID0+IHRoaXMuX3Jlc3BvbnNlSGFuZGxlcihyZXNwb25zZSkpXG4gIH1cblxuICB1cGRhdGVBdmF0YXIobGluaykge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XG4gICAgICBtZXRob2Q6ICdQQVRDSCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX3Rva2VuLFxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gICAgICB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBhdmF0YXI6IGxpbmtcbiAgICAgIH0pXG4gICAgfSlcbiAgICAudGhlbihyZXNwb25zZSA9PiB0aGlzLl9yZXNwb25zZUhhbmRsZXIocmVzcG9uc2UpKVxuICB9XG59IiwiZXhwb3J0IGNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3Rvcih0ZW1wbGF0ZSwgcGFyYW1zLCBjYXJkSWQsIG93bmVySWQsIGN1cnJlbnRVc2VySWQsIGxpa2VzQW1vdW50LCB7IGhhbmRsZUNhcmRDbGljaywgZGVsZXRlQ2FyZEhhbmRsZXIsIHNldExpa2VIYW5kbGVyLCBkZWxldGVMaWtlSGFuZGxlciB9KSB7XG4gICAgdGhpcy5fY2FyZFRlbXBsYXRlID0gdGVtcGxhdGU7XG4gICAgdGhpcy5fdGl0bGUgPSBwYXJhbXMudGl0bGU7XG4gICAgdGhpcy5faW1hZ2VVUkkgPSBwYXJhbXMuaW1hZ2VVUkk7XG4gICAgdGhpcy5fb3duZXJJZCA9IG93bmVySWQ7XG4gICAgdGhpcy5fY2FyZElkID0gY2FyZElkO1xuICAgIHRoaXMuX2N1cnJlbnRVc2VySWQgPSBjdXJyZW50VXNlcklkO1xuICAgIHRoaXMuX2xpa2VzQW1vdW50ID0gbGlrZXNBbW91bnQ7XG5cbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XG4gICAgdGhpcy5fZGVsZXRlQ2FyZEhhbmRsZXIgPSBkZWxldGVDYXJkSGFuZGxlcjtcbiAgICB0aGlzLl9zZXRMaWtlSGFuZGxlciA9IHNldExpa2VIYW5kbGVyO1xuICAgIHRoaXMuX2RlbGV0ZUxpa2VIYW5kbGVyID0gZGVsZXRlTGlrZUhhbmRsZXI7XG4gIH1cblxuICBfZ2V0Q2FyZEZyb21UZW1wbGF0ZSgpIHtcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IHRoaXMuX2NhcmRUZW1wbGF0ZS5xdWVyeVNlbGVjdG9yKCcuY2FyZCcpLmNsb25lTm9kZSh0cnVlKTtcbiAgICB0aGlzLl9kZWxldGVCdXR0b24gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fZGVsZXRlLWJ0bicpO1xuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fYnV0dG9uJyk7XG4gICAgdGhpcy5fY2FyZEltYWdlID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX2ltYWdlJyk7XG4gICAgdGhpcy5fY2FyZFRpdGxlID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX25hbWUnKTtcbiAgICB0aGlzLl9jYXJkTGlrZXMgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fbGlrZS1jb3VudGVyJyk7XG5cbiAgICBpZiAodGhpcy5fb3duZXJJZCAhPT0gdGhpcy5fY3VycmVudFVzZXJJZCkge1xuICAgICAgdGhpcy5fZGVsZXRlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2NhcmRfX2RlbGV0ZS1idG5fZGlzYWJsZWQnKTtcbiAgICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgdHJ1ZSk7XG4gICAgfVxuICB9XG5cbiAgX3NldENhcmRJbmZvKCkge1xuICAgIHRoaXMuX2NhcmRUaXRsZS50ZXh0Q29udGVudCA9IHRoaXMuX3RpdGxlO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5zcmMgPSB0aGlzLl9pbWFnZVVSSTtcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWx0ID0gYNCY0LfQvtCx0YDQsNC20LXQvdC40LUgJHt0aGlzLl90aXRsZX1gO1xuICB9XG5cbiAgX3NldExpa2VzQW1vdW50KCkge1xuICAgIHRoaXMuX2NhcmRMaWtlcy50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VzQW1vdW50Lmxlbmd0aDtcbiAgfVxuXG4gIF9pc0xpa2VkQnlVc2VyKCkge1xuICAgIHRoaXMuX2xpa2VzQW1vdW50LmZvckVhY2goKGxpa2VyKSA9PiB7XG4gICAgICBpZiAobGlrZXIuX2lkID09PSB0aGlzLl9jdXJyZW50VXNlcklkKSB7XG4gICAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmFkZCgnY2FyZF9fYnV0dG9uX2FjdGl2ZScpO1xuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICByZW5kZXJMaWtlc0Ftb3VudChsaWtlcykge1xuICAgIHJldHVybiBTdHJpbmcobGlrZXMpO1xuICB9XG5cbiAgc2V0TGlrZShsaWtlcykge1xuICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmFkZCgnY2FyZF9fYnV0dG9uX2FjdGl2ZScpO1xuICAgIHRoaXMuX2NhcmRMaWtlcy50ZXh0Q29udGVudCA9IHRoaXMucmVuZGVyTGlrZXNBbW91bnQobGlrZXMpO1xuICB9XG5cbiAgZGVsZXRlTGlrZShsaWtlcykge1xuICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnY2FyZF9fYnV0dG9uX2FjdGl2ZScpO1xuICAgIHRoaXMuX2NhcmRMaWtlcy50ZXh0Q29udGVudCA9IHRoaXMucmVuZGVyTGlrZXNBbW91bnQobGlrZXMpO1xuICB9XG5cbiAgZGVsZXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5yZW1vdmUoKTtcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IG51bGw7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgdGhpcy5fZGVsZXRlQ2FyZEhhbmRsZXIoKTtcbiAgICB9KTtcblxuICAgIHRoaXMuX2xpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICBpZiAodGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QuY29udGFpbnMoJ2NhcmRfX2J1dHRvbl9hY3RpdmUnKSkge1xuICAgICAgICB0aGlzLl9kZWxldGVMaWtlSGFuZGxlcigpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5fc2V0TGlrZUhhbmRsZXIoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHRoaXMuX2NhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljaygpO1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0Q2FyZElkKCkge1xuICAgIHJldHVybiB0aGlzLl9jYXJkSWQ7XG4gIH1cblxuICBnZW5lcmF0ZUNhcmQoKSB7XG4gICAgdGhpcy5fZ2V0Q2FyZEZyb21UZW1wbGF0ZSgpO1xuICAgIHRoaXMuX3NldENhcmRJbmZvKCk7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9zZXRMaWtlc0Ftb3VudCgpO1xuICAgIHRoaXMuX2lzTGlrZWRCeVVzZXIoKTtcblxuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcbiAgfVxufSIsImltcG9ydCAnLi9pbmRleC5jc3MnO1xuXG5pbXBvcnQge1xuICAgIGJ0bkVkaXQsXG4gICAgYnRuQWRkLFxuICAgIGJ0bkVkaXRBdmF0YXIsXG4gICAgdmFsaWRhdG9yU2VsZWN0b3JzLFxuICAgIGFkZEZvcm1TZWxlY3RvcixcbiAgICBlZGl0Rm9ybVNlbGVjdG9yLFxuICAgIHVwZGF0ZUZvcm1TZWxlY3RvcixcbiAgICBjYXJkc0NvbnRhaW5lcixcbiAgICBjYXJkVGVtcGxhdGUsXG4gICAgbmFtZUZpbGVkLFxuICAgIGRlc2NyaXB0aW9uRmlsZWRcbn0gZnJvbSAnLi4vdXRpbHMvY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IFVzZXJJbmZvIH0gZnJvbSAnLi4vY29tcG9uZW50cy9Vc2VySW5mby5qcyc7XG5pbXBvcnQgeyBQb3B1cFdpdGhJbWFnZSB9IGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMnO1xuaW1wb3J0IHsgUG9wdXBXaXRoRm9ybSB9IGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyc7XG5pbXBvcnQgeyBQb3B1cENvbmZpcm0gfSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwQ29uZmlybS5qcyc7XG5pbXBvcnQgeyBTZWN0aW9uIH0gZnJvbSAnLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzJztcbmltcG9ydCB7IEZvcm1WYWxpZGF0b3IgfSBmcm9tICcuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMnO1xuaW1wb3J0IHsgQXBpIH0gZnJvbSAnLi4vY29tcG9uZW50cy9BcGkuanMnO1xuaW1wb3J0IHsgQ2FyZCB9IGZyb20gXCIuLi9jb21wb25lbnRzL9ChYXJkXCI7XG5cbmxldCB1c2VySWQ7XG5cbmV4cG9ydCBjb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyh7XG4gICAgbmFtZVNlbGVjdG9yOiAnLnByb2ZpbGVfX25hbWUnLFxuICAgIGRlc2NyaXB0aW9uU2VsZWN0b3I6ICcucHJvZmlsZV9fZGVzY3JpcHRpb24nLFxuICAgIGF2YXRhclNlbGVjdG9yOiAnLnByb2ZpbGVfX2F2YXRhci1pbWFnZSAnXG59KTtcblxuZXhwb3J0IGNvbnN0IGFwaSA9ICBuZXcgQXBpKHtcbiAgICBiYXNlVXJsOiAnaHR0cHM6Ly9tZXN0by5ub21vcmVwYXJ0aWVzLmNvL3YxL2NvaG9ydC0yNycsXG4gICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiAnZDFmYjRmNWQtN2RjYi00MWE3LWE0YTYtMzY4NDNjNmYwZjZjJyxcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgIH1cbn0pO1xuXG5mdW5jdGlvbiBzZXRJbnB1dFZhbHVlcyh1c2VySW5mbykge1xuICAgIGNvbnN0IHsgbmFtZSwgZGVzY3JpcHRpb24gfSA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XG5cbiAgICBuYW1lRmlsZWQudmFsdWUgPSBuYW1lO1xuICAgIGRlc2NyaXB0aW9uRmlsZWQudmFsdWUgPSBkZXNjcmlwdGlvbjtcbn1cblxuZnVuY3Rpb24gZWRpdEZvcm1IYW5kbGVyKGV2ZW50LCB2YWx1ZXMpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgY29uc3QgeyBuYW1lLCBkZXNjcmlwdGlvbiB9ID0gdmFsdWVzO1xuXG4gICAgcG9wdXBXaXRoRWRpdEZvcm0uc2V0QnV0dG9uVGV4dENvbnRlbnQoKTtcbiAgICBhcGkuZWRpdFByb2ZpbGUobmFtZSwgZGVzY3JpcHRpb24pXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdXNlckluZm8uc2V0VXNlckluZm8oeyBuYW1lLCBkZXNjcmlwdGlvbiB9KTtcbiAgICAgICAgICAgIHBvcHVwV2l0aEVkaXRGb3JtLmNsb3NlKCk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiBhbGVydChg0J7RiNC40LHQutCwOiAke2Vycm9yfWApKVxuICAgICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgICAgICBwb3B1cFdpdGhFZGl0Rm9ybS5zZXRCdXR0b25UZXh0Q29udGVudCgn0KHQvtGF0YDQsNC90LjRgtGMJyk7XG4gICAgICAgIH0pXG59XG5cbmNvbnN0IGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oe1xuICAgIHJlbmRlcmVyOiAoaXRlbSkgPT4ge1xuICAgICAgICBjb25zdCBjYXJkID0gcmVuZGVyQ2FyZChpdGVtLmxpbmssIGl0ZW0ubmFtZSwgaXRlbS5faWQsIGl0ZW0ub3duZXIuX2lkLCB1c2VySWQsIGl0ZW0ubGlrZXMpO1xuICAgICAgICByZXR1cm4gY2FyZC5nZW5lcmF0ZUNhcmQoKTtcbiAgICB9XG59LCAnLmNhcmRzJyk7XG5cbmZ1bmN0aW9uIGFkZEZvcm1IYW5kbGVyKGV2ZW50LCB2YWx1ZXMpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgY29uc3QgcG9wdXBTYXZlQnRuID0gZXZlbnQudGFyZ2V0LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fc2F2ZScpO1xuICAgIGNvbnN0IHsgcGxhY2UsIGxpbmsgfSA9IHZhbHVlcztcblxuICAgIHBvcHVwV2l0aEFkZEZvcm0uc2V0QnV0dG9uVGV4dENvbnRlbnQoKTtcbiAgICBhcGkuYWRkQ2FyZChwbGFjZSwgbGluaylcbiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICAgICAgY29uc3QgY2FyZCA9IHJlbmRlckNhcmQobGluaywgcGxhY2UsIHJlc3BvbnNlLl9pZCwgcmVzcG9uc2Uub3duZXIuX2lkLCB1c2VySWQsIHJlc3BvbnNlLmxpa2VzKTtcbiAgICAgICAgICAgIGNhcmRTZWN0aW9uLmFkZEl0ZW0oY2FyZC5nZW5lcmF0ZUNhcmQoKSk7XG4gICAgICAgICAgICBwb3B1cFdpdGhBZGRGb3JtLmNsb3NlKCk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiBhbGVydChg0J7RiNC40LHQutCwOiAke2Vycm9yfWApKVxuICAgICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgICAgICBwb3B1cFdpdGhBZGRGb3JtLnNldEJ1dHRvblRleHRDb250ZW50KCfQodC+0YXRgNCw0L3QuNGC0YwnKTtcblxuICAgICAgICAgICAgcG9wdXBTYXZlQnRuLmNsYXNzTGlzdC5hZGQoJ3BvcHVwX19zYXZlX2Rpc2FibGVkJyk7XG4gICAgICAgICAgICBwb3B1cFNhdmVCdG4uc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsIHRydWUpO1xuICAgICAgICB9KVxufVxuXG5mdW5jdGlvbiB1cGRhdGVBdmF0YXJIYW5kbGVyKGV2ZW50LCB2YWx1ZXMpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgY29uc3QgeyBuZXdBdmF0YXIgfSA9IHZhbHVlcztcblxuICAgIHVwZGF0ZUF2YXRhclBvcHVwLnNldEJ1dHRvblRleHRDb250ZW50KCk7XG4gICAgYXBpLnVwZGF0ZUF2YXRhcihuZXdBdmF0YXIpXG4gICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgICAgICAgIHVzZXJJbmZvLnNldFVzZXJBdmF0YXIocmVzcG9uc2UuYXZhdGFyKTtcbiAgICAgICAgICAgIHVwZGF0ZUF2YXRhclBvcHVwLmNsb3NlKCk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiBhbGVydChg0J7RiNC40LHQutCwOiAke2Vycm9yfWApKVxuICAgICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgICAgICB1cGRhdGVBdmF0YXJQb3B1cC5zZXRCdXR0b25UZXh0Q29udGVudCgn0KHQvtGF0YDQsNC90LjRgtGMJyk7XG4gICAgICAgIH0pXG59XG5cbmZ1bmN0aW9uIHJlbmRlckNhcmQobGluaywgcGxhY2UsIGNhcmRJZCwgb3duZXJJZCwgY3VycmVudFVzZXIsIGxpa2VzQW1vdW50KSB7XG4gICAgY29uc3QgbmV3Q2FyZCA9IG5ldyBDYXJkKFxuICAgICAgICBjYXJkVGVtcGxhdGUsXG4gICAgICAgIHsgaW1hZ2VVUkk6IGxpbmssIHRpdGxlOiBwbGFjZSB9LFxuICAgICAgICBjYXJkSWQsXG4gICAgICAgIG93bmVySWQsXG4gICAgICAgIGN1cnJlbnRVc2VyLFxuICAgICAgICBsaWtlc0Ftb3VudCxcbiAgICAgICAge1xuICAgICAgICAgICAgaGFuZGxlQ2FyZENsaWNrOiAoKSA9PiBwb3B1cFdpdGhJbWFnZS5vcGVuKGxpbmssIHBsYWNlKSxcbiAgICAgICAgICAgIGRlbGV0ZUNhcmRIYW5kbGVyOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uZmlybURlbGV0ZVBvcHVwLm9wZW4oKTtcbiAgICAgICAgICAgICAgICBjb25maXJtRGVsZXRlUG9wdXAuc2V0U3VibWl0SGFuZGxlcihmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uZmlybURlbGV0ZVBvcHVwLnNldEJ1dHRvblRleHRDb250ZW50KCfQo9C00LDQu9C10L3QuNC1Li4uJyk7XG4gICAgICAgICAgICAgICAgICAgIGFwaS5kZWxldGVDYXJkKG5ld0NhcmQuZ2V0Q2FyZElkKCkpXG4gICAgICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdDYXJkLmRlbGV0ZUNhcmQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtRGVsZXRlUG9wdXAuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gYWxlcnQoYNCe0YjQuNCx0LrQsDogJHtlcnJvcn1gKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtRGVsZXRlUG9wdXAuc2V0QnV0dG9uVGV4dENvbnRlbnQoJ9CU0LAnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZXRMaWtlSGFuZGxlcjogKCkgPT4ge1xuICAgICAgICAgICAgICAgIGFwaS5zZXRMaWtlKG5ld0NhcmQuZ2V0Q2FyZElkKCkpXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q2FyZC5zZXRMaWtlKGRhdGEubGlrZXMubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGVycm9yID0+IGFsZXJ0KGDQntGI0LjQsdC60LA6ICR7ZXJyb3J9YCkpXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGVsZXRlTGlrZUhhbmRsZXI6ICgpID0+IHtcbiAgICAgICAgICAgICAgICBhcGkucmVtb3ZlTGlrZShuZXdDYXJkLmdldENhcmRJZCgpKVxuICAgICAgICAgICAgICAgICAgICAudGhlbihkYXRhID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0NhcmQuZGVsZXRlTGlrZShkYXRhLmxpa2VzLmxlbmd0aCk7XG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiBhbGVydChg0J7RiNC40LHQutCwOiAke2Vycm9yfWApKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgKTtcbiAgICByZXR1cm4gbmV3Q2FyZDtcbn1cblxuY29uc3QgcG9wdXBXaXRoSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoJy5wb3B1cF90eXBlX2ltYWdlJyk7XG5jb25zdCBwb3B1cFdpdGhFZGl0Rm9ybSA9IG5ldyBQb3B1cFdpdGhGb3JtKCcucG9wdXBfdHlwZV9lZGl0JywgZWRpdEZvcm1IYW5kbGVyKTtcbmNvbnN0IHBvcHVwV2l0aEFkZEZvcm0gPSBuZXcgUG9wdXBXaXRoRm9ybSgnLnBvcHVwX3R5cGVfYWRkJywgYWRkRm9ybUhhbmRsZXIpO1xuY29uc3QgdXBkYXRlQXZhdGFyUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSgnLnBvcHVwX3R5cGVfdXBkYXRlJywgdXBkYXRlQXZhdGFySGFuZGxlcik7XG5jb25zdCBjb25maXJtRGVsZXRlUG9wdXAgPSBuZXcgUG9wdXBDb25maXJtKCcucG9wdXBfdHlwZV9jb25maXJtJyk7XG5cbmNvbnN0IGFkZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0b3JTZWxlY3RvcnMsIGFkZEZvcm1TZWxlY3Rvcik7XG5jb25zdCBlZGl0Rm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRvclNlbGVjdG9ycywgZWRpdEZvcm1TZWxlY3Rvcik7XG5jb25zdCB1cGRhdGVGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdG9yU2VsZWN0b3JzLCB1cGRhdGVGb3JtU2VsZWN0b3IpO1xuXG5wb3B1cFdpdGhJbWFnZS5zZXRFdmVudExpc3RlbmVycygpO1xucG9wdXBXaXRoRWRpdEZvcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbnBvcHVwV2l0aEFkZEZvcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbnVwZGF0ZUF2YXRhclBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5jb25maXJtRGVsZXRlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuYWRkRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5lZGl0Rm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG51cGRhdGVGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcblxuYnRuRWRpdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICBwb3B1cFdpdGhFZGl0Rm9ybS5vcGVuKCk7XG4gICAgc2V0SW5wdXRWYWx1ZXModXNlckluZm8pO1xuICAgIGVkaXRGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xufSk7XG5cbmJ0bkFkZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgcG9wdXBXaXRoQWRkRm9ybS5vcGVuKGUpO1xuICAgIGFkZEZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XG59KTtcblxuYnRuRWRpdEF2YXRhci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICB1cGRhdGVBdmF0YXJQb3B1cC5vcGVuKCk7XG4gICAgdXBkYXRlRm9ybVZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTtcbn0pO1xuXG5Qcm9taXNlLmFsbChbYXBpLmdldFVzZXJJbmZvKCksIGFwaS5nZXRJbml0aWFsQ2FyZHMoKV0pXG4gICAgLnRoZW4oKFt1c2VyRGF0YSwgY2FyZHNdKSA9PiB7XG4gICAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHtcbiAgICAgICAgICAgIG5hbWU6IHVzZXJEYXRhLm5hbWUsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogdXNlckRhdGEuYWJvdXQsXG4gICAgICAgIH0pO1xuICAgICAgICB1c2VySW5mby5zZXRVc2VyQXZhdGFyKHVzZXJEYXRhLmF2YXRhcik7XG4gICAgICAgIHVzZXJJZCA9IHVzZXJEYXRhLl9pZDtcblxuICAgICAgICBjYXJkU2VjdGlvbi5yZW5kZXIoY2FyZHMucmV2ZXJzZSgpKTtcblxuICAgIH0pXG4gICAgLmNhdGNoKGVycm9yID0+IGFsZXJ0KGDQntGI0LjQsdC60LA6ICR7ZXJyb3J9YCkpIl0sIm5hbWVzIjpbInZhbGlkYXRvclNlbGVjdG9ycyIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwibmFtZUZpbGVkIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiZGVzY3JpcHRpb25GaWxlZCIsImJ0bkVkaXQiLCJidG5BZGQiLCJidG5FZGl0QXZhdGFyIiwiY2FyZFRlbXBsYXRlIiwiY29udGVudCIsImFkZEZvcm1TZWxlY3RvciIsImVkaXRGb3JtU2VsZWN0b3IiLCJ1cGRhdGVGb3JtU2VsZWN0b3IiLCJVc2VySW5mbyIsIm5hbWVTZWxlY3RvciIsImRlc2NyaXB0aW9uU2VsZWN0b3IiLCJhdmF0YXJTZWxlY3RvciIsInRoaXMiLCJfbmFtZSIsIl9kZXNjcmlwdGlvbiIsIl9hdmF0YXIiLCJfaWQiLCJuYW1lIiwidGV4dENvbnRlbnQiLCJkZXNjcmlwdGlvbiIsImF2YXRhciIsInNyYyIsIlBvcHVwIiwic2VsZWN0b3IiLCJfc2VsZWN0b3IiLCJfcG9wdXAiLCJfc3VibWl0QnRuIiwiX2hhbmRsZUVzY0Nsb3NlIiwiYmluZCIsImV2ZW50Iiwia2V5IiwiY2xvc2UiLCJjbGFzc0xpc3QiLCJhZGQiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInJlbW92ZSIsInRleHQiLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0IiwiUG9wdXBXaXRoSW1hZ2UiLCJfcG9wdXBDYXB0aW9uIiwiX3BvcHVwSW1hZ2UiLCJsaW5rIiwidGl0bGUiLCJhbHQiLCJQb3B1cFdpdGhGb3JtIiwic3VibWl0aGFuZGxlciIsIl9zdWJtaXRoYW5kbGVyIiwiX2Zvcm0iLCJfaW5wdXRzIiwicXVlcnlTZWxlY3RvckFsbCIsIl92YWx1ZXMiLCJmb3JFYWNoIiwiaW5wdXQiLCJpZCIsInZhbHVlIiwicmVzZXQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJQb3B1cENvbmZpcm0iLCJzdWJtaXRIYW5kbGVyIiwiX3N1Ym1pdEhhbmRsZXIiLCJwcmV2ZW50RGVmYXVsdCIsIlNlY3Rpb24iLCJyZW5kZXJlciIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJpbm5lckh0bWwiLCJpdGVtIiwicHJlcGVuZCIsImFycmF5IiwiX2NsZWFyQ29udGFpbmVyIiwiYWRkSXRlbSIsIkZvcm1WYWxpZGF0b3IiLCJvYmoiLCJmb3JtIiwiX2NvbmZpZ3VyYXRvciIsIl9lcnJvckVsZW1lbnQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJpbnB1dEFycmF5Iiwic29tZSIsImJ1dHRvbiIsIl9oYXNJbnZhbGlkSW5wdXQiLCJzZXRBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJBcnJheSIsImZyb20iLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiX3RvZ2dsZUJ1dHRvbiIsIl9zZXRFdmVudExpc3RlbmVycyIsIkFwaSIsIm9wdGlvbnMiLCJfYmFzZVVybCIsImJhc2VVcmwiLCJfdG9rZW4iLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsInJlc3BvbnNlIiwib2siLCJQcm9taXNlIiwicmVzb2x2ZSIsImpzb24iLCJyZWplY3QiLCJzdGF0dXMiLCJmZXRjaCIsInRoZW4iLCJfcmVzcG9uc2VIYW5kbGVyIiwiYWJvdXQiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImNhcmRJZCIsInVzZXJJZCIsIkNhcmQiLCJ0ZW1wbGF0ZSIsInBhcmFtcyIsIm93bmVySWQiLCJjdXJyZW50VXNlcklkIiwibGlrZXNBbW91bnQiLCJoYW5kbGVDYXJkQ2xpY2siLCJkZWxldGVDYXJkSGFuZGxlciIsInNldExpa2VIYW5kbGVyIiwiZGVsZXRlTGlrZUhhbmRsZXIiLCJfY2FyZFRlbXBsYXRlIiwiX3RpdGxlIiwiX2ltYWdlVVJJIiwiaW1hZ2VVUkkiLCJfb3duZXJJZCIsIl9jYXJkSWQiLCJfY3VycmVudFVzZXJJZCIsIl9saWtlc0Ftb3VudCIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfZGVsZXRlQ2FyZEhhbmRsZXIiLCJfc2V0TGlrZUhhbmRsZXIiLCJfZGVsZXRlTGlrZUhhbmRsZXIiLCJfY2FyZEVsZW1lbnQiLCJjbG9uZU5vZGUiLCJfZGVsZXRlQnV0dG9uIiwiX2xpa2VCdXR0b24iLCJfY2FyZEltYWdlIiwiX2NhcmRUaXRsZSIsIl9jYXJkTGlrZXMiLCJsZW5ndGgiLCJsaWtlciIsImxpa2VzIiwiU3RyaW5nIiwicmVuZGVyTGlrZXNBbW91bnQiLCJjb250YWlucyIsIl9nZXRDYXJkRnJvbVRlbXBsYXRlIiwiX3NldENhcmRJbmZvIiwiX3NldExpa2VzQW1vdW50IiwiX2lzTGlrZWRCeVVzZXIiLCJ1c2VySW5mbyIsImFwaSIsImNhcmRTZWN0aW9uIiwicmVuZGVyQ2FyZCIsIm93bmVyIiwiZ2VuZXJhdGVDYXJkIiwicGxhY2UiLCJjdXJyZW50VXNlciIsIm5ld0NhcmQiLCJwb3B1cFdpdGhJbWFnZSIsIm9wZW4iLCJjb25maXJtRGVsZXRlUG9wdXAiLCJzZXRTdWJtaXRIYW5kbGVyIiwic2V0QnV0dG9uVGV4dENvbnRlbnQiLCJkZWxldGVDYXJkIiwiZ2V0Q2FyZElkIiwiY2F0Y2giLCJlcnJvciIsImFsZXJ0IiwiZmluYWxseSIsInNldExpa2UiLCJkYXRhIiwicmVtb3ZlTGlrZSIsImRlbGV0ZUxpa2UiLCJwb3B1cFdpdGhFZGl0Rm9ybSIsInZhbHVlcyIsImVkaXRQcm9maWxlIiwic2V0VXNlckluZm8iLCJwb3B1cFdpdGhBZGRGb3JtIiwicG9wdXBTYXZlQnRuIiwiYWRkQ2FyZCIsImNhcmQiLCJ1cGRhdGVBdmF0YXJQb3B1cCIsIm5ld0F2YXRhciIsInVwZGF0ZUF2YXRhciIsInNldFVzZXJBdmF0YXIiLCJhZGRGb3JtVmFsaWRhdG9yIiwiZWRpdEZvcm1WYWxpZGF0b3IiLCJ1cGRhdGVGb3JtVmFsaWRhdG9yIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJlbmFibGVWYWxpZGF0aW9uIiwiZ2V0VXNlckluZm8iLCJzZXRJbnB1dFZhbHVlcyIsInJlc2V0VmFsaWRhdGlvbiIsImUiLCJhbGwiLCJnZXRJbml0aWFsQ2FyZHMiLCJ1c2VyRGF0YSIsImNhcmRzIiwicmVuZGVyIiwicmV2ZXJzZSJdLCJzb3VyY2VSb290IjoiIn0=